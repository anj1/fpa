name: Build and Publish

on: [push, pull_request]

jobs:
  build:
    name: Build for CUDA ${{ matrix.cuda }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda: ["12-4"]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD: "cp311-manylinux* cp312-manylinux* cp313-manylinux*"
          CIBW_BEFORE_ALL: >
            yum install -y yum-utils &&
            yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo &&
            yum clean all &&
            yum -y install cuda-toolkit-$(echo ${{ matrix.cuda }} | sed 's/\./\-/g' | cut -d'-' -f1,2) &&
            ln -s /usr/local/cuda-$(echo ${{ matrix.cuda }} | cut -d'.' -f1,2) /usr/local/cuda

      - uses: actions/upload-artifact@v4
        with:
          name: dist-cuda${{ matrix.cuda }}
          path: wheelhouse/*.whl

  publish-test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
        id-token: write
    if: github.event_name == 'push'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14
        with:
          repository-url: https://test.pypi.org/legacy/

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
        id-token: write
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: dist-*
          merge-multiple: true
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.14